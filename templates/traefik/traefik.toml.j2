# Automatically generated by ansible 'compose-gen' role.
# Ansible managed! Do not modify - all changed will be overwritten by playbook!

[global]
  checkNewVersion = true
  sendAnonymousUsage = true

[entryPoints]
  [entryPoints.http]
    address = ":80"
  [entryPoints.https]
    address = ":443"
  [entryPoints.traefik]
    address = ":8080"

[providers]
  providersThrottleDuration = "2s"
  [providers.docker]
    watch = true
    exposedByDefault = false
    endpoint = "unix:///var/run/docker.sock"
    network = "{{ docker_network }}"
    swarmModeRefreshSeconds = "15s"

[providers.file]
  directory = "/dynamic/"
  watch = true

[api]
  insecure = true
  dashboard = true

[tls]
  [tls.options]
    [tls.options.default]
      sniStrict = true
      cipherSuites = [
        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
        "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305",
        "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
        "TLS_AES_128_GCM_SHA256",
        "TLS_AES_256_GCM_SHA384",
        "TLS_CHACHA20_POLY1305_SHA256",
        "TLS_FALLBACK_SCSV"
    ]

[certificatesResolvers]
  [certificatesResolvers.default]
    [certificatesResolvers.default.acme]
      email = "{{ acme_email }}"
      storage = "acme.json"
      [certificatesResolvers.default.acme.httpChallenge]
        entryPoint = "http"

[log]
  level = "ERROR"

{% if monitoring_enable %}
[metrics]
  [metrics.influxDB]
    protocol = "http"
    address = "http://{{ ansible_default_ipv4.address }}:8086"
    database = "telegraf"
    retentionPolicy = ""
    username = "{{ monitoring_influx_write_user }}"
    password = "{{ monitoring_influx_write_password }}"
    addEntryPointsLabels = true
    addServicesLabels = true
    pushInterval = "10s"
{% endif %}
