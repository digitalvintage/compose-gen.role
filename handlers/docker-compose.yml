- name: Update docker-compose environment
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml up -d --build"
  register: compose_updated
  listen: "compose_update"

- name: Removing orphaned containers
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml up -d --remove-orphans"
  listen: "compose_update"

- name: Restart Traefik
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart traefik"
  listen: "restart_traefik"

- name: Restart Tick stack monitoring
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart mon-telegraf mon-influxdb mon-kapacitor mon-chronograf"
  when: compose_updated is undefined
  listen: "restart_monitoring"

- name: Restart Nextcloud (Main Instance)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart nextcloud-db nextcloud-redis nextcloud-app nextcloud-cron nextcloud-frontend"
  when: compose_updated is undefined
  listen: "restart_nextcloud"

- name: Restart Plex
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart plex-app plex-proxy"
  when: compose_updated is undefined
  listen: "restart_plex"

- name: Stop Transmission
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml stop transmission"
  listen: "restart_transmission"

- name: Update Transmission config
  copy:
    src: "{{ base_dir }}/transmission/settings.json.bak"
    dest: "{{ base_dir }}/transmission/settings.json"
    remote_src: yes
  listen: "restart_transmission"

- name: Start Transmission
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml start transmission"
  listen: "restart_transmission"

- name: Restart NFS Server
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart nfs-server"
  when: compose_updated is undefined
  listen: "restart_nfs"

- name: Compile restart list - Websites
  set_fact:
    backend_to_restart={{ (backend_to_restart | default ([]) + [item[0].item[1].sitename | default (item[0].item.sitename)]) | unique }}
  loop:
    - "{{ handle_restart_website_apache.results | selectattr('changed', 'equalto', true) | list }}"
    - "{{ handle_restart_website_fpm.results | selectattr('changed', 'equalto', true) | list }}"
    - "{{ handle_restart_website_config.results | selectattr('changed', 'equalto', true) | list }}"
    - "{{ handle_restart_website_msmtp.results | selectattr('changed', 'equalto', true) | list }}"
  when: item != []
  listen: "restart_website"

- name: Restart Websites (Apache)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item }}-nginx {{ item[0] }}-apache {{ item[0] }}-db"
  with_nested:
    - "{{ lookup('items', backend_to_restart, wantlist=True ) }}"
    - "{{ websites }}"
  when:
    - backend_to_restart is defined
    - item[1].sitename == item[0]
    - item[1].backend_type | default (default_backend_type) == 'apache'
  listen: "restart_website"

- name: Restart Websites (php-fpm)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item }}-nginx {{ item[0] }}-fpm {{ item[0] }}-db"
  with_nested:
    - "{{ lookup('items', backend_to_restart, wantlist=True ) }}"
    - "{{ websites }}"
  when:
    - backend_to_restart is defined
    - item[1].sitename == item[0]
    - item[1].backend_type | default (default_backend_type) == 'fpm'
  listen: "restart_website"

- name: Compile restart list - Bitrix
  set_fact:
    bitrix_to_restart={{ (bitrix_to_restart | default ([]) + [item[0].item[1].sitename | default (item[0].item.sitename)]) | unique }}
  loop:
    - "{{ handle_restart_bitrix.results | default([])  | selectattr('changed', 'equalto', true) | list }}"
    - "{{ handle_restart_bitrix_composite.results | default([])  | selectattr('changed', 'equalto', true) | list }}"
    - "{{ handle_restart_bitrix_config.results | default([])  | selectattr('changed', 'equalto', true) | list }}"
    - "{{ handle_restart_bitrix_msmtp.results | default([])  | selectattr('changed', 'equalto', true) | list }}"
  when: item != []
  listen: "restart_bitrix"

- name: Restart Website (Bitrix-based)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item }}-nginx {{ item }}-bitrix {{ item }}-db {{ item }}-redis"
  loop: "{{ lookup('items', bitrix_to_restart, wantlist=True ) }}"
  when: bitrix_to_restart is defined
  listen: "restart_bitrix"


- name: Restart Cloud storage
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item[0].item.sitename }}-nextcloud-db {{ item[0].item.sitename }}-nextcloud-redis {{ item[0].item.sitename }}-nextcloud-app {{ item[0].item.sitename }}-nextcloud-cron {{ item[0].item.sitename }}-nextcloud-frontend"
  loop: "{{ handle_restart_storage.results | selectattr('changed', 'equalto', true) | list }}"
  when: compose_updated is undefined
  listen: "restart_cloudstorage"
