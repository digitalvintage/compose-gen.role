- name: Build Docker Images
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml build"
  listen: "compose_build_images"

- name: Update docker-compose environment
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml up -d --remove-orphans --build"
  register: compose_updated
  listen: "compose_update"

- name: Restart Traefik
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart traefik"
  listen: "restart_traefik"

- name: Restart Tick stack monitoring
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart mon-telegraf mon-influxdb mon-kapacitor mon-chronograf"
  when: compose_updated is undefined
  listen: "restart_monitoring"

- name: Restart Nextcloud (Main Instance)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart nextcloud-db nextcloud-redis nextcloud-app nextcloud-cron nextcloud-frontend"
  when: compose_updated is undefined
  listen: "restart_nextcloud"

- name: Restart Plex
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart plex-app plex-proxy"
  when: compose_updated is undefined
  listen: "restart_plex"

- name: Stop Transmission
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml stop transmission"
  listen: "restart_transmission"

- name: Update Transmission config
  copy:
    src: "{{ base_dir }}/transmission/settings.json.bak"
    dest: "{{ base_dir }}/transmission/settings.json"
    remote_src: yes
  listen: "restart_transmission"

- name: Start Transmission
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml start transmission"
  listen: "restart_transmission"

- name: Restart NFS Server
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart nfs-server"
  when: compose_updated is undefined
  listen: "restart_nfs"

- name: Restart Website Frontend (php-fpm)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item.item.sitename }}-nginx"
  loop: "{{ handle_restart_frontend_fpm.results | selectattr('changed', 'equalto', true) | list }}"
  listen: "restart_frontend"

- name: Restart Website Frontend (Apache)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item.item.sitename }}-nginx"
  loop: "{{ handle_restart_frontend_apache.results | selectattr('changed', 'equalto', true) | list }}"
  listen: "restart_frontend"

- name: Restart Website (Bitrix-based)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item.item.sitename }}-nginx {{ item.item.sitename }}-bitrix"
  loop: "{{ handle_restart_bitrix.results | selectattr('changed', 'equalto', true) | list }}"
  listen: "restart_bitrix"

- name: Restart Website (Bitrix-based)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item.item.sitename }}-nginx {{ item.item.sitename }}-bitrix"
  loop: "{{ handle_restart_bitrix_2.results | selectattr('changed', 'equalto', true) | list }}"
  listen: "restart_bitrix"

- name: Restart Website Backend (php-fpm)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item.item.sitename }}-fpm"
  loop: "{{ handle_restart_backend_php.results | selectattr('changed', 'equalto', true) | list }}"
  when:
    - >-
      item.backend_type is undefined
      or (item.backend_type is defined and item.backend_type == "fpm")
  listen: "restart_backend"

- name: Restart Website Backend (Apache)
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item.item.sitename }}-apache"
  loop: "{{ handle_restart_backend_php.results | selectattr('changed', 'equalto', true) | list }}"
  when: item.backend_type is defined and item.backend_type == "apache"
  listen: "restart_backend"

- name: Restart Cloud storage
  command: "docker-compose -f {{ compose_dir }}/docker-compose.yml restart {{ item.item.sitename }}-nextcloud-db {{ item.item.sitename }}-nextcloud-redis {{ item.item.sitename }}-nextcloud-app {{ item.item.sitename }}-nextcloud-cron {{ item.item.sitename }}-nextcloud-frontend"
  loop: "{{ handle_restart_storage.results | selectattr('changed', 'equalto', true) | list }}"
  when: compose_updated is undefined
  listen: "restart_cloudstorage"
