---
# Bitrix-based Web sites configuration

- name: Create Bitrix-based Web sites directory tree
  file:
    path: "{{ sites_dir }}/{{ item[0].sitename }}-bitrix/{{ item[1] }}"
    state: directory
    mode: "0755"
  with_nested:
    - "{{ bitrixsites | flatten(levels=1) }}"
    - ["wwwroot", "db", "config", "config/nginx", "log"]

- name: Create user 'mysql' for Percona
  user:
    name: "mysql"
    comment: "MySQL/Percona user"
    state: "present"
    shell: "/sbin/nologin"
    home: "{{ sites_dir }}"
  loop: "{{ bitrixsites | flatten(levels=1) }}"

- name: Create database directories for Percona
  file:
    path: "{{ sites_dir }}/{{ item.sitename }}-bitrix/db/mysql"
    state: directory
    mode: "0755"
    owner: polkitd
    group: mysql
  loop: "{{ bitrixsites | flatten(levels=1) }}"

- name: Check if instance needs to be initialized
  find:
    paths: "{{ sites_dir }}/{{ item.sitename }}-bitrix/wwwroot"
  register: bitrix_to_init
  loop: "{{ bitrixsites | flatten(levels=1) }}"
  notify: init_bitrix
  changed_when: bitrix_to_init.matched == 0

- name: Check/Create nginx config directory structure
  file:
    path: "{{ sites_dir }}/{{ item[1].sitename }}-bitrix/config/nginx/{{ item[0].path }}"
    state: directory
  with_nested:
    - "{{ query('filetree', '../templates/bitrix/etc/nginx') }}"
    - "{{ bitrixsites | flatten(levels=1) }}"
  when: item[0].state == 'directory'

- name: Generate common nginx config for Bitrix
  template:
    src: "{{ item[0].src }}"
    dest: "{{ sites_dir }}/{{ item[1].sitename }}-bitrix/config/nginx/{{ item[0].path }}"
  with_nested:
    - "{{ query('filetree', '../templates/bitrix/etc/nginx') }}"
    - "{{ bitrixsites | flatten(levels=1) }}"
  when: item[0].state == 'file'

- name: Generate nginx configuration files for Bitrix
  template:
    src: "bitrix/vhost-bitrix.conf.j2"
    dest: "{{ sites_dir }}/{{ item.sitename }}-bitrix/config/nginx/bx/site_enabled/vhost-bitrix.conf"
    force: yes
    backup: yes
  loop: "{{ bitrixsites | flatten(levels=1) }}"
  register: handle_restart_bitrix_frontend
  notify: restart_bitrix_frontend
  when: item.composite_mode | default (default_bitrix_composite_mode) == false

- name: Remove unnecessary configuration for Bitrix in Composite mode
  file:
    path: "{{ sites_dir }}/{{ item.sitename }}-bitrix/config/nginx/bx/site_enabled/vhost-bitrix-composite.conf"
    state: absent
  loop: "{{ bitrixsites | flatten(levels=1) }}"
  when: item.composite_mode | default (default_bitrix_composite_mode) == false

- name: Generate nginx configuration files for Bitrix in Composite mode
  template:
    src: "bitrix/vhost-bitrix-composite.conf.j2"
    dest: "{{ sites_dir }}/{{ item.sitename }}-bitrix/config/nginx/bx/site_enabled/vhost-bitrix-composite.conf"
    force: yes
    backup: yes
  loop: "{{ bitrixsites | flatten(levels=1) }}"
  register: handle_restart_bitrix_frontend
  notify: restart_bitrix_frontend
  when: item.composite_mode | default (default_bitrix_composite_mode) == true

- name: Remove unnecessary configuration for Bitrix
  file:
    path: "{{ sites_dir }}/{{ item.sitename }}-bitrix/config/nginx/bx/site_enabled/vhost-bitrix.conf"
    state: absent
  loop: "{{ bitrixsites | flatten(levels=1) }}"
  when: item.composite_mode | default (default_bitrix_composite_mode) == true
